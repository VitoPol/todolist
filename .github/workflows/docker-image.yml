name: Build and deploy

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    pass

env:
  version: $GITHUB_RUN_ID
  user: vitopol

jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Build the Docker image
      run: docker build -t ${{ env.user }}/todolist-api:${{ env.version }} .
      
    - name: Docker login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ env.user }}
        password: ${{ secrets.DOCKER_TOKEN }}
          
    - name: Push the Docker image
      run: docker push ${{ env.user }}/todolist-api:${{ env.version }}

  deploy:
  
    runs-on: ubuntu-latest
    
    needs: build_and_push
    
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      VK_KEY: ${{ secrets.VK_KEY }}
      VK_SECRET: ${{ secrets.VK_SECRET }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      version: $GITHUB_RUN_ID

    steps:
    
    - name: clone code
      uses: actions/checkout@v2

    - name: render configs
      run: |
        mkdir deploy
        cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
        cat .docker_env | envsubst > deploy/.docker_env
        
    - name: clone files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        source: "deploy/docker-compose.yaml,deploy/.docker_env"
        target: "app"
        strip_components: 1

    - name: run docker-compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd app
          echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker compose down
          echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker compose up -d
